#cloud-config
package_update: true
package_upgrade: true

packages:
  - docker.io
  - docker-compose
  - nginx
  - curl
  - wget
  - htop
  - net-tools

# Configure Docker
runcmd:
  - systemctl enable docker
  - systemctl start docker
  - usermod -aG docker ubuntu
  
  # Create nginx configuration for Minecraft proxy
  - mkdir -p /opt/minecraft-proxy
  - |
    cat > /opt/minecraft-proxy/nginx.conf << EOF
    events {
        worker_connections 1024;
    }
    
    stream {
        upstream minecraft_backend {
            server ${minecraft_backend_ip}:25565;
        }
        
        server {
            listen 25565;
            proxy_pass minecraft_backend;
            proxy_timeout 1s;
            proxy_responses 1;
            proxy_connect_timeout 1s;
        }
        
        error_log /var/log/nginx/error.log;
    }
    EOF
  
  # Create docker-compose file
  - |
    cat > /opt/minecraft-proxy/docker-compose.yml << EOF
    version: '3.8'
    
    services:
      minecraft-proxy:
        image: nginx:1.25-alpine
        container_name: minecraft-reverse-proxy
        ports:
          - "25565:25565"
        volumes:
          - ./nginx.conf:/etc/nginx/nginx.conf:ro
        restart: unless-stopped
        environment:
          - NGINX_ENTRYPOINT_QUIET_LOGS=1
    EOF
  
  # Create update script
  - |
    cat > /opt/minecraft-proxy/update-backend-ip.sh << 'EOF'
    #!/bin/bash
    NEW_IP="$1"
    
    if [ -z "$NEW_IP" ]; then
        echo "Usage: $0 <new-backend-ip>"
        exit 1
    fi
    
    if ! [[ $NEW_IP =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
        echo "Error: Invalid IP address format"
        exit 1
    fi
    
    echo "Updating backend IP to: $NEW_IP:25565"
    sed -i "s/server [0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}:25565;/server $NEW_IP:25565;/" /opt/minecraft-proxy/nginx.conf
    
    cd /opt/minecraft-proxy
    docker-compose restart minecraft-proxy
    
    echo "âœ… Backend IP updated to $NEW_IP:25565"
    EOF
  
  - chmod +x /opt/minecraft-proxy/update-backend-ip.sh
  
  # Start the proxy
  - cd /opt/minecraft-proxy
  - docker-compose up -d
  
  # Create systemd service for auto-start
  - |
    cat > /etc/systemd/system/minecraft-proxy.service << EOF
    [Unit]
    Description=Minecraft Reverse Proxy
    Requires=docker.service
    After=docker.service
    
    [Service]
    Type=oneshot
    RemainAfterExit=yes
    WorkingDirectory=/opt/minecraft-proxy
    ExecStart=/usr/bin/docker-compose up -d
    ExecStop=/usr/bin/docker-compose down
    TimeoutStartSec=0
    
    [Install]
    WantedBy=multi-user.target
    EOF
  
  - systemctl enable minecraft-proxy.service
  - systemctl start minecraft-proxy.service

write_files:
  - path: /opt/minecraft-proxy/README.md
    content: |
      # Minecraft Reverse Proxy
      
      This Oracle Cloud instance runs a reverse proxy for Minecraft traffic.
      
      ## Management Commands
      
      Check status:
      ```bash
      cd /opt/minecraft-proxy
      docker-compose ps
      docker-compose logs
      ```
      
      Update backend IP:
      ```bash
      sudo /opt/minecraft-proxy/update-backend-ip.sh NEW_IP_HERE
      ```
      
      Manual restart:
      ```bash
      cd /opt/minecraft-proxy
      sudo docker-compose restart
      ```
      
      ## Files
      - `/opt/minecraft-proxy/nginx.conf` - Nginx configuration
      - `/opt/minecraft-proxy/docker-compose.yml` - Docker Compose setup
      - `/opt/minecraft-proxy/update-backend-ip.sh` - IP update script

final_message: "Minecraft reverse proxy setup complete!"